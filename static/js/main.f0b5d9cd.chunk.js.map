{"version":3,"sources":["Components/header.js","Components/playerBattleground.js","Components/computerBattleground.js","Scripts/factories.js","App.js","index.js"],"names":["Header","PlayerBattleground","props","shipPositions","board","randomizeShips","gridArray","Array","keys","slice","className","playerName","map","index","indexOf","data-key","ComputerBattleground","Ship","position","positionHit","setPosition","coord","i","length","hit","target","push","isSunk","Gameboard","shipOne","shipTwo","shipThree","shipFour","shipFive","allShips","missedShots","hitShots","randomPositions","j","orientation","origin","num2","Math","max","some","event","includes","every","condition","allSunk","sunk","receiveAttack","shot","misses","num1","floor","random","randPos","concat","Player","name","enemyBoard","fireShot","alert","App","humanBoard","computerBoard","humanPlayer","computerPlayer","useEffect","grid","document","querySelectorAll","DOMShooter","getAttribute","parseInt","querySelector","classList","add","k","setTimeout","compShot","forEach","addEventListener","removeEventListener","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f0b5d9cd.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst Header = () => {\n    return(\n        <div>\n            Battleship\n        </div>\n    );\n};\n\nexport default Header;","import React from \"react\";\n\nconst PlayerBattleground = (props) => {\n  const shipPositions = props.board.randomizeShips(65, 128);\n\n  const gridArray = [...Array(129).keys()].slice(65);\n\n  return (\n    <div className=\"Battlefield\">\n      <div className=\"boardName\">{props.playerName}</div>\n      <div className={`Battlegrid ${props.playerName}`}>\n        {gridArray.map((index) => {\n          if (shipPositions.indexOf(index) >= 0) {\n            return (\n              <div className=\"grid ship\" key={index} data-key={index}></div>\n            );\n          } else {\n            return <div className=\"grid\" key={index} data-key={index}></div>;\n          }\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default PlayerBattleground;\n","import React from \"react\";\n\nconst ComputerBattleground = (props) => {\n  const shipPositions = props.board.randomizeShips(1, 64);\n\n  const gridArray = [...Array(65).keys()].slice(1);\n\n  return (\n    <div className=\"Battlefield\">\n      <div className=\"boardName\">{props.playerName}</div>\n      <div className={`Battlegrid ${props.playerName}`}>\n        {gridArray.map((index) => {\n          if (shipPositions.indexOf(index) >= 0) {\n            return (\n              <div className=\"grid ship\" key={index} data-key={index}></div>\n            );\n          } else {\n            return <div className=\"grid\" key={index} data-key={index}></div>;\n          }\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default ComputerBattleground;\n","const Ship = () => {\n  let position = [];\n  let positionHit = [];\n\n  const setPosition = (coord) => {\n    for (let i = 0; i < coord.length; i++) {\n      position[i] = coord[i];\n    }\n  };\n\n  const hit = (target) => {\n    if (position.indexOf(target) >= 0 && !(positionHit.indexOf(target) >= 0)) {\n      positionHit.push(target);\n    }\n  };\n\n  const isSunk = () => {\n    if (positionHit.length === position.length) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return { position, positionHit, setPosition, hit, isSunk };\n};\n\nconst Gameboard = () => {\n  let shipOne = Ship();\n  let shipTwo = Ship();\n  let shipThree = Ship();\n  let shipFour = Ship();\n  let shipFive = Ship();\n  let allShips = [shipOne, shipTwo, shipThree, shipFour, shipFive];\n\n  let missedShots = [];\n  let hitShots = [];\n\n  const randomizeShips = (num1, num2) => {\n    let shipPositions = [];\n    for (let i = allShips.length; i > 0; i--) {\n      //0=horizontal, 1=vertical\n      const orientation = Math.floor(Math.random() * 2);\n      let origin = [Math.floor(Math.random() * 64) + num1];\n      let randPos = randomPositions(\n        i - 1,\n        orientation,\n        origin,\n        shipPositions,\n        num2\n      );\n      while (randPos.condition !== true) {\n        origin = [Math.floor(Math.random() * 64) + num1];\n        randPos = randomPositions(\n          i - 1,\n          orientation,\n          origin,\n          shipPositions,\n          num2\n        );\n      }\n      shipPositions = shipPositions.concat(randPos.origin);\n      allShips[i - 1].setPosition(randPos.origin);\n    }\n    return shipPositions;\n  };\n\n  const randomPositions = (j, orientation, origin, shipPositions, num2) => {\n    if (orientation === 0) {\n      for (j; j > 0; j--) {\n        origin.push(origin[0] + j);\n      }\n    } else if (orientation === 1) {\n      for (j; j > 0; j--) {\n        origin.push(origin[0] + j * 8);\n      }\n    }\n\n    if (orientation === 0) {\n      if (\n        Math.max(...origin) < num2 + 1 &&\n        !origin.some((event) => shipPositions.includes(event)) &&\n        (origin.every((event) => event > num2 - 64 && event < num2 - 55) ||\n          origin.every((event) => event > num2 - 56 && event < num2 - 47) ||\n          origin.every((event) => event > num2 - 48 && event < num2 - 39) ||\n          origin.every((event) => event > num2 - 40 && event < num2 - 31) ||\n          origin.every((event) => event > num2 - 32 && event < num2 - 23) ||\n          origin.every((event) => event > num2 - 24 && event < num2 - 15) ||\n          origin.every((event) => event > num2 - 16 && event < num2 - 7) ||\n          origin.every((event) => event > num2 - 8 && event < num2 +1))\n      ) {\n        return { condition: true, origin };\n      } else {\n        return { condition: false, origin };\n      }\n    } else if (orientation === 1) {\n      if (\n        Math.max(...origin) < num2 + 1 &&\n        !origin.some((event) => shipPositions.includes(event))\n      ) {\n        return { condition: true, origin };\n      } else {\n        return { condition: false, origin };\n      }\n    }\n  };\n\n  const receiveAttack = (shot) => {\n    let misses = 0;\n    for (let i = 0; i < allShips.length; i++) {\n      if (allShips[i].position.indexOf(shot) >= 0) {\n        allShips[i].hit(shot);\n        hitShots.push(shot);\n        if (allSunk()) {\n          return true;\n        }\n      } else {\n        misses += 1;\n      }\n    }\n    if (misses === allShips.length) {\n      missedShots.push(shot);\n    }\n  };\n\n  const allSunk = () => {\n    let sunk = 0;\n    for (let i = 0; i < allShips.length; i++) {\n      if (allShips[i].isSunk() === false) {\n        break;\n      } else {\n        sunk += 1;\n      }\n    }\n    if (sunk === allShips.length) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return {\n    hitShots,\n    missedShots,\n    receiveAttack,\n    allSunk,\n    randomizeShips,\n    shipOne,\n    shipTwo,\n    shipThree,\n    shipFour,\n    shipFive,\n  };\n};\n\nconst Player = (name, enemyBoard) => {\n  const fireShot = (shot) => {\n    if (\n      !(enemyBoard.hitShots.indexOf(shot) >= 0) &&\n      !(enemyBoard.missedShots.indexOf(shot) >= 0)\n    ) {\n      if (enemyBoard.receiveAttack(shot)){\n        alert(`${name} won!`)\n      };\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return { fireShot };\n};\n\nexport { Ship, Gameboard, Player };\n","import React, { useEffect } from \"react\";\nimport Header from \"./Components/header\";\nimport PlayerBattleground from \"./Components/playerBattleground\";\nimport ComputerBattleground from \"./Components/computerBattleground\";\nimport { Player, Gameboard } from \"./Scripts/factories\";\n\nfunction App() {\n  const humanBoard = Gameboard();\n  const computerBoard = Gameboard();\n  const humanPlayer = Player(\"Human\", computerBoard);\n  const computerPlayer = Player(\"Computer Overlord\", humanBoard);\n\n  useEffect(() => {\n    const grid = document.querySelectorAll(\".grid\");\n\n    const DOMShooter = (i) => {\n      if (i.getAttribute(\"data-key\") < 65) {\n        if (humanPlayer.fireShot(parseInt(i.getAttribute(\"data-key\")))) {\n          for (let j = 0; j < computerBoard.hitShots.length; j++) {\n            document\n              .querySelector(`[data-key='${computerBoard.hitShots[j]}']`)\n              .classList.add(\"hit\");\n          }\n          for (let k = 0; k < computerBoard.missedShots.length; k++) {\n            document\n              .querySelector(`[data-key='${computerBoard.missedShots[k]}']`)\n              .classList.add(\"miss\");\n          }\n          setTimeout(() => {\n            let compShot = Math.floor(Math.random() * 64) + 65;\n            while (!computerPlayer.fireShot(compShot)) {\n              compShot = Math.floor(Math.random() * 64) + 65;\n            }\n            for (let j = 0; j < humanBoard.hitShots.length; j++) {\n              document\n                .querySelector(`[data-key='${humanBoard.hitShots[j]}']`)\n                .classList.add(\"hit\");\n            }\n            for (let k = 0; k < humanBoard.missedShots.length; k++) {\n              document\n                .querySelector(`[data-key='${humanBoard.missedShots[k]}']`)\n                .classList.add(\"miss\");\n            }\n          }, 50);\n        }\n      }\n    };\n\n    grid.forEach((i) => {\n      i.addEventListener(\"click\", () => {\n        DOMShooter(i);\n      });\n    });\n\n    return () => {\n      grid.forEach((i) => {\n        i.removeEventListener(\"click\", () => {\n          DOMShooter(i);\n        });\n      });\n    };\n  }, []);\n\n  return (\n    <div>\n      <div className=\"header\">\n        <Header />\n      </div>\n      <div className=\"main\">\n        <PlayerBattleground playerName=\"Player\" board={humanBoard} />\n        <ComputerBattleground playerName=\"Computer\" board={computerBoard} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}